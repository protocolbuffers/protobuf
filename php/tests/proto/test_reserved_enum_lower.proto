syntax = "proto3";

package lower_enum;

enum abstract { ZERO1 = 0; }
enum and { ZERO2 = 0; }
enum array { ZERO3 = 0; }
enum as { ZERO4 = 0; }
enum break { ZERO5 = 0; }
enum callable { ZERO6 = 0; }
enum case { ZERO7 = 0; }
enum catch { ZERO8 = 0; }
enum class { ZERO9 = 0; }
enum clone { ZERO10 = 0; }
enum const { ZERO11 = 0; }
enum continue { ZERO12 = 0; }
enum declare { ZERO13 = 0; }
enum default { ZERO14 = 0; }
enum die { ZERO15 = 0; }
enum do { ZERO16 = 0; }
enum echo { ZERO17 = 0; }
enum else { ZERO18 = 0; }
enum elseif { ZERO19 = 0; }
enum empty { ZERO20 = 0; }
enum enddeclare { ZERO21 = 0; }
enum endfor { ZERO22 = 0; }
enum endforeach { ZERO23 = 0; }
enum endif { ZERO24 = 0; }
enum endswitch { ZERO25 = 0; }
enum endwhile { ZERO26 = 0; }
enum eval { ZERO27 = 0; }
enum exit { ZERO28 = 0; }
enum extends { ZERO29 = 0; }
enum final { ZERO30 = 0; }
enum finally { ZERO31 = 0; }
enum fn { ZERO32 = 0; }
enum for { ZERO33 = 0; }
enum foreach { ZERO34 = 0; }
enum function { ZERO35 = 0; }
enum global { ZERO36 = 0; }
enum goto { ZERO37 = 0; }
enum if { ZERO38 = 0; }
enum implements { ZERO39 = 0; }
enum include { ZERO40 = 0; }
enum include_once { ZERO41 = 0; }
enum instanceof { ZERO42 = 0; }
enum insteadof { ZERO43 = 0; }
enum interface { ZERO44 = 0; }
enum isset { ZERO45 = 0; }
enum list { ZERO46 = 0; }
enum match { ZERO47 = 0; }
enum mixed { ZERO81 = 0; }
enum namespace { ZERO48 = 0; }
enum never { ZERO82 = 0; }
enum new { ZERO49 = 0; }
enum object { ZERO83 = 0; }
enum or { ZERO50 = 0; }
enum parent { ZERO78 = 0; }
enum print { ZERO51 = 0; }
enum private { ZERO52 = 0; }
enum protected { ZERO53 = 0; }
enum public { ZERO54 = 0; }
enum readonly { ZERO80 = 0; }
enum require { ZERO55 = 0; }
enum require_once { ZERO56 = 0; }
enum return { ZERO57 = 0; }
enum self { ZERO79 = 0; }
enum static { ZERO58 = 0; }
enum switch { ZERO59 = 0; }
enum throw { ZERO60 = 0; }
enum trait { ZERO61 = 0; }
enum try { ZERO62 = 0; }
enum unset { ZERO63 = 0; }
enum use { ZERO64 = 0; }
enum var { ZERO65 = 0; }
enum while { ZERO66 = 0; }
enum xor { ZERO67 = 0; }
enum yield { ZERO68 = 0; }
enum int { ZERO69 = 0; }
enum float { ZERO70 = 0; }
enum bool { ZERO71 = 0; }
enum string { ZERO72 = 0; }
enum true { ZERO73 = 0; }
enum false { ZERO74 = 0; }
enum null { ZERO75 = 0; }
enum void { ZERO76 = 0; }
enum iterable { ZERO77 = 0; }
