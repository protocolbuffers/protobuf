module Google
  module Protobuf
    # There isn't really a concrete `Enum` module generated by Protobuf. Instead, you can use this
    # documentation as an indicator of methods that are defined on each `Enum` module that is generated.
    # E.g. if you have:
    #   enum my_enum_type
    # in your Proto file and generate Ruby code, a module
    # called `MyEnumType` will be generated with the following methods available.
    module Enum
      # This module method, provided on each generated enum module, looks up an enum
      # value by number and returns its name as a Ruby symbol, or nil if not found.
      # @param number [Integer]
      # @return [String]
      def self.lookup(number); end

      # This module method, provided on each generated enum module, looks up an enum
      # value by name (as a Ruby symbol) and returns its name, or nil if not found.
      # @param name [String]
      # @return [Integer]
      def self.resolve(name); end

      # This module method, provided on each generated enum module, returns the
      # {EnumDescriptor} corresponding to this enum type.
      # @return [EnumDescriptor]
      def self.descriptor; end
    end
  end
end
